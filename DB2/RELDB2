       IDENTIFICATION   DIVISION.
       PROGRAM-ID.           PRGDB2R.
       AUTHOR.          ADILSON BIZARRIA.
      *
      *  GERA PROGRAMA DE RELATORIO
      *

       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
                        DECIMAL-POINT IS COMMA.

      *================================================================*
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
      *================================================================*

       77 WS-DATA         PIC  X(08)         VALUE SPACES.
       77 WS-HORA         PIC  X(05)         VALUE SPACES.
       77 WS-TIME         PIC S9(15)  COMP-3 VALUE ZEROS.
       77 WS-FASE         PIC  9(01)         VALUE ZEROS.
       77 WS-ENCERRA      PIC  X(20)         VALUE 'PROGRAMA ENCERRADO'.
       77 WS-VEZES        PIC  9(02)         VALUE ZEROS.
       77 WS-MENSA        PIC  X(30)         VALUE SPACES.
       01 WS-AREA.
          05 WS-MATRIC-I     PIC  9(05)         VALUE ZEROS.
          05 WS-MATRIC-U     PIC  9(05)         VALUE ZEROS.
          05 WS-FLAG         PIC  9(01)         VALUE ZEROS.

           COPY DFHBMSCA.
           COPY DFHAID.
           COPY MAPDB2R.
           EXEC SQL INCLUDE SQLCA END-EXEC.
           EXEC SQL INCLUDE DB2ALU END-EXEC.
      *================================================================*
      *                           CURSOR                               *
      *================================================================*
             EXEC SQL DECLARE CUR1 CURSOR FOR
                  SELECT MAT_ALU, NOM_ALU, CUR_ALU, TUR_ALU,
                          END_ALU, BAI_ALU, CID_ALU, EST_ALU,
                          TEL_ALU, EML_ALU
                  FROM DBADB2.TABALU
                  WHERE MAT_ALU > :MAT-ALU
                  ORDER BY MAT_ALU
             END-EXEC.
             EXEC SQL DECLARE CUR2 CURSOR FOR
                  SELECT MAT_ALU, NOM_ALU, CUR_ALU, TUR_ALU,
                          END_ALU, BAI_ALU, CID_ALU, EST_ALU,
                          TEL_ALU, EML_ALU
                  FROM DBADB2.TABALU
                  WHERE MAT_ALU < :MAT-ALU
                  ORDER BY MAT_ALU DESC
             END-EXEC.
      *================================================================*
       LINKAGE SECTION.
      *================================================================*
       01  DFHCOMMAREA.
           05 LK-MATRIC-I     PIC  9(05).
           05 LK-MATRIC-U     PIC  9(05).
           05 LK-FLAG         PIC  9(01).
      *================================================================*
       PROCEDURE DIVISION.
      *================================================================*
      *----------------------------------------------------------------*
       000-00-INICIO                               SECTION.
      *----------------------------------------------------------------*
           IF  EIBCALEN = 0
              PERFORM 001-00-FORMATA-TELA
              PERFORM 002-00-MOSTRA-CABECALHO
              MOVE DFHBMPRF TO TNOMEA
              MOVE DFHBMPRF TO TCURSA
              MOVE DFHBMPRF TO TMSGMA
              MOVE SPACES      TO TNOMEO
              MOVE SPACES      TO TCURSO
              MOVE SPACES      TO TTURMO
              MOVE SPACES      TO TENDRO
              MOVE SPACES      TO TBAIRO
              MOVE SPACES      TO TCIDAO
              MOVE SPACES      TO TESTDO
              MOVE SPACES      TO TFONEO
              MOVE SPACES      TO TMAILO
              MOVE DFHBMPRF    TO TNOMEA
              MOVE DFHBMPRF    TO TCURSA
              MOVE DFHBMPRF    TO TTURMA
              MOVE DFHBMPRF    TO TENDRA
              MOVE DFHBMPRF    TO TBAIRA
              MOVE DFHBMPRF    TO TCIDAA
              MOVE DFHBMPRF    TO TESTDA
              MOVE DFHBMPRF    TO TFONEA
              MOVE DFHBMPRF    TO TMAILA
      *       MOVE DFHBMPRF    TO TCONFA
      *       MOVE DFHBMPRF    TO TCONFDA
              MOVE DFHBMFSE    TO TMTRCA
              MOVE ZEROS       TO TMTRCO
              MOVE DFHBMPRF                       TO TMSGMA
      *       MOVE DFHBMFSE                       TO TOPCAOA
              MOVE  -1                            TO TMTRCL
              MOVE  1                             TO WS-FASE
              MOVE SPACES                         TO TNOMEO
              MOVE  1                             TO WS-VEZES
              MOVE  0                             TO MAT-ALU
              PERFORM 014-00-OPEN-CUR1
      *       PERFORM 006-00-START-BR
              PERFORM 008-00-LER-ARQ UNTIL WS-VEZES GREATER 4
              PERFORM 010-00-MOSTRA-TRAILER
              PERFORM 999-00-ENCERRA
           ELSE
              PERFORM 003-00-RECEBE-TELA
              PERFORM 004-00-VALIDA-FASE
           END-IF.
      *----------------------------------------------------------------*
       001-00-FORMATA-TELA                            SECTION.
      *----------------------------------------------------------------*
           EXEC CICS
                ASKTIME ABSTIME (WS-TIME)
           END-EXEC.

           EXEC CICS
                FORMATTIME ABSTIME (WS-TIME)
                DATESEP('/') TIMESEP(':')
                DDMMYYYY(WS-DATA)
                TIME(WS-HORA)
           END-EXEC.

           MOVE DFHBMPRF TO THORAA
           MOVE WS-HORA  TO THORAO

           MOVE DFHBMPRF TO TDATAA
           MOVE WS-DATA  TO TDATAO

           MOVE DFHBMPRF TO TTRNSA.
           MOVE EIBTRNID TO TTRNSO.

           MOVE DFHBMPRF TO TTERMA.
           MOVE EIBTRMID TO TTERMO.

       001-00-FIM. EXIT.
      *----------------------------------------------------------------*
       002-00-MOSTRA-CABECALHO SECTION.
      *----------------------------------------------------------------*

      *    CURSOR -> PARA POSICIONAR O CURSOR
      *    NOHANDLE ->PARA NAO ABENDAR E EU TRATAR O ERRO

           EXEC CICS
                SEND MAP('CABDB2R')
                     MAPSET('MAPDB2R')
                     FROM(CABDB2RO)
                     NOHANDLE
                     ERASE
                     ACCUM
           END-EXEC.
           EXEC CICS
                SEND MAP('CB0DB2R')
                     MAPSET('MAPDB2R')
                     FROM(CB0DB2RO)
                     NOHANDLE
                     ACCUM
           END-EXEC.
           EXEC CICS
                SEND MAP('CB1DB2R')
                     MAPSET('MAPDB2R')
                     FROM(CB1DB2RO)
                     NOHANDLE
                     ACCUM
           END-EXEC.
      *----------------------------------------------------------------*
       003-00-RECEBE-TELA   SECTION.
      *----------------------------------------------------------------*
           EXEC CICS
              RECEIVE MAP('RODDB2R')
                      MAPSET('MAPDB2R')
                      INTO(RODDB2RO)
                      NOHANDLE
            END-EXEC
            IF EIBAID = DFHPF3
               EXEC CICS XCTL PROGRAM ('PRGDB2M')
               END-EXEC
            END-IF.
            IF EIBAID = DFHPF8
               IF LK-FLAG = 1
                  MOVE 'FINAL DO ARQUIVO' TO WS-MENSA
                  MOVE LK-MATRIC-I TO LK-MATRIC-U
                  SUBTRACT 1 FROM LK-MATRIC-U
                  PERFORM 011-00-AVANCA-PAGINA
                ELSE
                  PERFORM 011-00-AVANCA-PAGINA
               END-IF
            END-IF.
            IF EIBAID = DFHPF7
               IF LK-FLAG = 2
                  MOVE 'INICIO DO ARQUIVO' TO WS-MENSA
                  PERFORM 012-00-VOLTA-PAGINA
               ELSE
                  PERFORM 012-00-VOLTA-PAGINA
               END-IF
            END-IF.
       004-00-VALIDA-FASE      SECTION.
      *----------------------------------------------------
       008-00-LER-ARQ     SECTION.
      *----------------------------------------------------
              EXEC SQL FETCH CUR1
                   INTO :MAT-ALU, :NOM-ALU, :CUR-ALU, :TUR-ALU,
                         :END-ALU, :BAI-ALU, :CID-ALU,
                         :EST-ALU, :TEL-ALU, :EML-ALU
              END-EXEC.
              IF WS-VEZES EQUAL 1
                 MOVE MAT-ALU          TO WS-MATRIC-I
              END-IF
              MOVE MAT-ALU             TO WS-MATRIC-U
              IF SQLCODE = 0
                  MOVE MAT-ALU                TO TMTRCO
                  MOVE NOM-ALU                  TO TNOMEO
                  MOVE CUR-ALU                 TO TCURSO
                  MOVE TUR-ALU                 TO TTURMO
                  MOVE END-ALU                   TO TENDRO
                  MOVE BAI-ALU                TO TBAIRO
                  MOVE CID-ALU                TO TCIDAO
                  MOVE EST-ALU               TO TESTDO
                  MOVE TEL-ALU                 TO TFONEO
                  MOVE EML-ALU                 TO TMAILO
                  MOVE DFHBMPRF                  TO TNOMEA
                  MOVE DFHBMPRF                  TO TCURSA
                  MOVE DFHBMPRF                  TO TTURMA
                  MOVE DFHBMPRF                  TO TENDRA
                  MOVE DFHBMPRF                  TO TBAIRA
                  MOVE DFHBMPRF                  TO TCIDAA
                  MOVE DFHBMPRF                  TO TESTDA
                  MOVE DFHBMPRF                  TO TFONEA
                  MOVE DFHBMPRF                  TO TMAILA
                  ADD  1                         TO WS-VEZES
                  PERFORM 009-00-MOSTRA-DETALHE
              ELSE
                  MOVE 1                     TO WS-FLAG
                  MOVE 'FINAL DO RELATORIO'  TO WS-MENSA
                  MOVE 5                     TO WS-VEZES
              END-IF.
      *----------------------------------------------------
       009-00-MOSTRA-DETALHE       SECTION.
      *----------------------------------------------------
                EXEC CICS
                     SEND MAP('DT1DB2R')
                          MAPSET('MAPDB2R')
                          FROM(DT1DB2RO)
                          NOHANDLE
                          ACCUM
                END-EXEC.
      *----------------------------------------------------
        010-00-MOSTRA-TRAILER       SECTION.
      *----------------------------------------------------
                MOVE WS-MENSA    TO TMSGMO
                EXEC CICS
                     SEND MAP('RODDB2R')
                          MAPSET('MAPDB2R')
                          FROM(RODDB2RO)
                          NOHANDLE
                          ACCUM
                END-EXEC.
                EXEC CICS SEND PAGE END-EXEC.
      *----------------------------------------------------
        011-00-AVANCA-PAGINA      SECTION.
      *----------------------------------------------------

           MOVE LK-MATRIC-U TO MAT-ALU
           MOVE 1           TO WS-VEZES
      *    ADD  1           TO MAT-ALU
           PERFORM 001-00-FORMATA-TELA
           PERFORM 002-00-MOSTRA-CABECALHO
           PERFORM 014-00-OPEN-CUR1
           PERFORM 008-00-LER-ARQ UNTIL WS-VEZES GREATER 4
           PERFORM 010-00-MOSTRA-TRAILER
           PERFORM 016-00-CLOSE-CUR1
           PERFORM 999-00-ENCERRA.

      *----------------------------------------------------
        012-00-VOLTA-PAGINA       SECTION.
      *----------------------------------------------------

           MOVE LK-MATRIC-I TO MAT-ALU
           MOVE 1           TO WS-VEZES
           PERFORM 015-00-OPEN-CUR2
           PERFORM 013-00-LER-ANT UNTIL WS-VEZES GREATER 5
           PERFORM 017-00-CLOSE-CUR2

           MOVE 1           TO WS-VEZES
           PERFORM 001-00-FORMATA-TELA
           PERFORM 002-00-MOSTRA-CABECALHO
           PERFORM 014-00-OPEN-CUR1
           PERFORM 008-00-LER-ARQ UNTIL WS-VEZES GREATER 4
           PERFORM 010-00-MOSTRA-TRAILER
           PERFORM 016-00-CLOSE-CUR1
           PERFORM 999-00-ENCERRA.

      *----------------------------------------------------
       013-00-LER-ANT     SECTION.
      *----------------------------------------------------
              EXEC SQL FETCH CUR2
                   INTO :MAT-ALU, :NOM-ALU, :CUR-ALU, :TUR-ALU,
                         :END-ALU, :BAI-ALU, :CID-ALU,
                         :EST-ALU, :TEL-ALU, :EML-ALU
              END-EXEC.
              IF SQLCODE NOT EQUAL 0
                 MOVE 2       TO WS-FLAG
              END-IF
              ADD 1  TO WS-VEZES.
      *----------------------------------------------------
       014-00-OPEN-CUR1            SECTION.
      *----------------------------------------------------
             EXEC SQL
                   OPEN CUR1
             END-EXEC.

             MOVE 1 TO WS-VEZES.
       014-00-OPEN-CUR1-FIM. EXIT.
      *----------------------------------------------------
       015-00-OPEN-CUR2            SECTION.
      *----------------------------------------------------
             EXEC SQL
                   OPEN CUR2
             END-EXEC.

             MOVE 1 TO WS-VEZES.
       015-00-OPEN-CUR2-FIM. EXIT.
      *----------------------------------------------------
       016-00-CLOSE-CUR1            SECTION.
      *----------------------------------------------------
             EXEC SQL
                   CLOSE CUR1
             END-EXEC.

             MOVE 1 TO WS-VEZES.
       016-00-CLOSE-CUR1-FIM. EXIT.
      *----------------------------------------------------
       017-00-CLOSE-CUR2            SECTION.
      *----------------------------------------------------
             EXEC SQL
                   CLOSE CUR2
             END-EXEC.

             MOVE 1 TO WS-VEZES.
       017-00-CLOSE-CUR2-FIM. EXIT.
      *----------------------------------------------------
       999-00-ENCERRA              SECTION.
      *----------------------------------------------------
           EXEC CICS RETURN
           TRANSID ('DB2R')
           COMMAREA (WS-AREA)
           END-EXEC.



